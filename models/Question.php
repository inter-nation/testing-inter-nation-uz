<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "question".
 *
 * @property int $id
 * @property int|null $question_type_id
 * @property int|null $order
 * @property int|null $type
 * @property string|null $description
 * @property string|null $created_at
 * @property string|null $updated_at
 *
 * @property Answer[] $answers
 * @property string|mixed $typeStr
 * @property QuestionType $questionType
 */
class Question extends \yii\db\ActiveRecord
{
    public const TYPE_RADIO_LIST = 10;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'question';
    }

    public function fields()
    {
        return [
            'id',
            'question_type_id',
            'order',
            'type',
            'answers',
            'typeStr',
            'description',
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'value' => date('Y-m-d H:i:s')
            ]
        ];
    }



    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'question_type_id' => 'Question Type ID',
            'type' => 'Type',
            'description' => 'Description',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * Gets query for [[Answers]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getAnswers()
    {
        return $this->hasMany(Answer::className(), ['question_id' => 'id']);
    }

    /**
     * Gets query for [[QuestionType]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getQuestionType()
    {
        return $this->hasOne(QuestionType::className(), ['id' => 'question_type_id']);
    }
    public function beforeSave($insert)
    {
        if ($insert) {
            $this->type = self::TYPE_RADIO_LIST;
            $this->order = $this->generateOrder();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    private function generateOrder()
    {
        $order = 1;
        $last = Question::find()->where(['question_type_id'=>$this->question_type_id])->one();
        if ($last!=null) {
            $order = $last->order +1;
        }
        return $order;
    }
    public function getTypeStr()
    {
        $list = [
            self::TYPE_RADIO_LIST=>Yii::t('app','Choose correct answer'),
        ];
        return $list[$this->type]??'';
    }
}
